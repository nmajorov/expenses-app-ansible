---
- name: "deploy backend pipeline"
  ansible.builtin.debug:
    msg:
      - "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
      - "deploy backend pipeline in namespace '{{ app_namespace }}'"
      - "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"

- name: "add admin to pipline service account"
  ansible.builtin.shell: |
    {{ openshift_cli }} policy add-role-to-user \
       admin system:serviceaccount:{{ app_namespace}}:pipeline \
      -n {{ app_namespace}}
    exit 0
  changed_when: false


- name: "deploy backend workspace pvc"
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    namespace: "{{ app_namespace }}"
    src: backend/resources/pvc-workspace.yaml

- name: "backend: deploy pipeline backend image resource"
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    namespace: "{{ app_namespace }}"
    template:
      backend/image-resource.j2


- name: "backend: deploy backend database"
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    namespace: "{{ app_namespace }}"
    template:
      backend/postgres-deployment.yaml.j2



- name: "backend: delete tasks if exists"
  # to redeploy we need to delete tasks first
  ansible.builtin.shell: |
    {{ openshift_cli }} delete tasks.tekton.dev \
    --ignore-not-found=true --all -n {{ app_namespace}}
     exit 0
  changed_when: false


- name: "backend: deploy tasks"
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    namespace: "{{ app_namespace }}"
    src: "{{ item }}"
  loop:
    - backend/tasks/task-clean-up.yaml
    - backend/tasks/task-deploy-native-backend.yaml
    - backend/tasks/task-deploy-postgresql.yaml
    - backend/tasks/task-mvn.yaml
    - backend/tasks/task-push-image.yaml


- name: "backend: deploy pipeline"
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    namespace: "{{ app_namespace }}"
    src:
      backend/pipeline.yaml


- name: "get full sso url from route"
  ansible.builtin.shell: |
    {{ openshift_cli }} get route -n {{ sso_operator_namespace }} \
    keycloak-https -o jsonpath=\{.spec.host\}
    exit 0
  register: ssohost


- name: "show backend build variables"
  ansible.builtin.debug:
    msg:
      - "run pipeline with params" 
      - " branch: {{ app_backend_git_revision }} "
      - " sso url: https://{{ ssohost.stdout }} "


- name: "create a pipline run backend "
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    namespace: "{{ app_namespace }}"
    template:
      backend/pipeline-run.yaml.j2


