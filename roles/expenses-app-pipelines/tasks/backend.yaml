---
- name: "deploy backend pipeline"
  ansible.builtin.debug:
    msg:
      - "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
      - "deploy backend pipeline in namespace '{{ app_namespace }}'"
      - "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"




- name: "deploy backend workspace pvc"
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    namespace: "{{ app_namespace }}"
    src: backend/resources/pvc-workspace.yaml


- name: "backend: deploy backend database"
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    namespace: "{{ app_namespace }}"
    template:
      backend/postgres-deployment.yaml.j2



- name: "backend: delete tekton-task if exists"
  # to redeploy we need to delete tekton-task first
  ansible.builtin.shell: |
    {{ openshift_cli }} delete tasks.tekton.dev  backend-mvn  \
      clean-up-backend  \
      deploy-native-backend \
      deploy-postgresql   \
      push-image   --ignore-not-found=true -n {{ app_namespace}}
     exit 0
  changed_when: false


- name: "backend: deploy tekton-task"
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    namespace: "{{ app_namespace }}"
    src: "{{ item }}"
  loop:
    - backend/tekton-tasks/task-clean-up.yaml
    - backend/tekton-tasks/task-deploy-native-backend.yaml
    - backend/tekton-tasks/task-deploy-postgresql.yaml
    - backend/tekton-tasks/task-mvn.yaml
    - backend/tekton-tasks/task-push-image.yaml


- name: "backend: deploy pipeline"
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    namespace: "{{ app_namespace }}"
    src:
      backend/pipeline.yaml



- name: "show backend build variables"
  ansible.builtin.debug:
    msg:
      - "run pipeline with params"
      - " branch: {{ app_backend_git_revision }} "
      - " sso url: https://{{ ssohost.stdout }} "


- name: "create a pipline run backend "
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    namespace: "{{ app_namespace }}"
    template:
      backend/pipeline-run.yaml.j2
